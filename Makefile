DC = docker compose
NETWORK_NAME = microservices-network

.PHONY: all network kafka user team

# üëâ –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏ (–Ω–µ –ø–∞–¥–∞—Ç—å, –µ—Å–ª–∏ –æ–Ω–∞ —É–∂–µ –µ—Å—Ç—å)
network:
	-@docker network rm $(NETWORK_NAME)
	@docker network create $(NETWORK_NAME)

# üëâ –ü–æ–¥–Ω—è—Ç—å kafka (–±—Ä–æ–∫–µ—Ä)
kafka:
	cd src/apps/kafka && $(DC) --env-file .env -f docker/production.yml up --build -d

down-kafka:
	cd src/apps/kafka && $(DC) --env-file .env -f docker/production.yml down

# üëâ –ü–æ–¥–Ω—è—Ç—å user —Å–µ—Ä–≤–∏—Å
user:
	cd src/apps/user && $(DC) --env-file .env -f docker/production.yml up --build -d

down-user:
	cd src/apps/user && $(DC) --env-file .env -f docker/production.yml down

# üëâ –ü–æ–¥–Ω—è—Ç—å team —Å–µ—Ä–≤–∏—Å
team:
	cd src/apps/team && $(DC) --env-file .env -f docker/production.yml up --build -d

down-team:
	cd src/apps/team && $(DC) --env-file .env -f docker/production.yml down

calendar:
	cd src/apps/calendar && $(DC) --env-file .env -f docker/production.yml up --build -d

down-calendar:
	cd src/apps/calendar && $(DC) --env-file .env -f docker/production.yml down

# üëâ –ü–æ–¥–Ω—è—Ç—å –≤—Å—ë (–ø–æ –ø–æ—Ä—è–¥–∫—É)
all: network kafka user team calendar

# üëâ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
down-all: down-team down-user down-kafka down-calendar
	@docker network rm $(NETWORK_NAME) || true
